     1                                 %line 1+1 aTint.asm
     2                                 [section .data]
     3 00000000 2D39363500000000        strNumber dd '-965', 0
     4 00000008 00                      isNegative db 0
     5                                 
     6                                 [section .bss]
     7 00000000 <gap>                   intResult resq 1
     8                                 
     9                                 [section .text]
    10                                 [global _start]
    11                                 
    12                                 _start:
    13 00000000 48C7C6[00000000]        mov rsi, strNumber
    14 00000007 49C7C000000000          mov r8, 0
    15 0000000E 31C0                    xor eax, eax
    16 00000010 8A06                    mov al, [rsi]
    17                                 
    18                                 
    19 00000012 3C2D                    cmp al, '-'
    20 00000014 740E                    je checkNextChar
    21 00000016 3C2B                    cmp al, '+'
    22 00000018 740A                    je checkNextChar
    23 0000001A 3C30                    cmp al, '0'
    24 0000001C 0F8C7D000000            jl invalidInput
    25 00000022 3C39                    cmp al, '9'
    26 00000024 7F7D                    jg invalidInput
    27                                 
    28                                 checkNextChar:
    29 00000026 48FFC6                  inc rsi
    30                                 
    31                                 validateLoop:
    32 00000029 8A06                    mov al, [rsi]
    33 0000002B 84C0                    test al, al
    34 0000002D 740B                    jz startConversion
    35 0000002F 3C30                    cmp al, '0'
    36 00000031 7C70                    jl invalidInput
    37 00000033 3C39                    cmp al, '9'
    38 00000035 7F6C                    jg invalidInput
    39 00000037 48FFC6                  inc rsi
    40 0000003A EBEB                    jmp validateLoop
    41                                 
    42                                 startConversion:
    43 0000003C 48C7C6[00000000]        mov rsi, strNumber
    44 00000043 8A06                    mov al, [rsi]
    45 00000045 3C2D                    cmp al, '-'
    46 00000047 7404                    je negativeNumber
    47 00000049 3C2B                    cmp al, '+'
    48 0000004B 740A                    je positiveNumber
    49 0000004D EB10                    jmp convertLoop
    50                                 
    51                                 negativeNumber:
    52 0000004F C60425[00000000]01      mov byte [isNegative], 1
    53                                 
    54 00000057 EB06                    jmp convertLoop
    55                                 
    56                                 positiveNumber:
    57 00000059 C60425[00000000]00      mov byte [isNegative], 0
    58                                 
    59                                 
    60                                 convertLoop:
    61 00000061 48C7C000000000          mov rax, 0
    62 00000068 8A06                    mov al, [rsi]
    63 0000006A 48FFC6                  inc rsi
    64 0000006D 84C0                    test al, al
    65 0000006F 7409                    jz conversionDone
    66 00000071 2C30                    sub al, '0'
    67 00000073 4D6BC00A                imul r8, r8, 10
    68 00000077 4901C0                  add r8, rax
    69 0000007A EBE3                    jmp convertLoop
    70                                 
    71                                 conversionDone:
    72 0000007C 4C890425[00000000]      mov [intResult], r8
    73 00000084 803C25[00000000]01      cmp byte [isNegative], 1
    74 0000008C 7505                    jne exitProgram
    75                                 
    76 0000008E F71C25[00000000]        neg dword [intResult]
    77                                 
    78                                 exitProgram:
    79                                 
    80 00000095 48C7C03C000000          mov rax, 60
    81 0000009C 48C7C700000000          mov rdi, 0
    82 000000A3 0F05                    syscall
    83                                 
    84                                 invalidInput:
    85 000000A5 C70425[00000000]FF-     mov dword [intResult], 0xFFFFFFFF
    86 000000A5 FFFFFF             
    87 000000B0 EBE1                    jmp exitProgram
